	.data
;277096475, 596472299, 158960544, 365417143, 996159696

;for:                            C       C          X                  C                       x + (max)
array:	.word -434666751, 1031043809280, -1, 1085102596360827008, 6442450944, -412848907, 8446744073709553770 , 809973839, -731642026, -301493200, -652642047, -877856636, -384114842, 924839946, 0
	.word 977086543, 388502542, 252327071, -511790190, 243132359, 901270165, 486487802, -124083026, 96032257, 612882857, -312451410, -377065909, -151870344, -81133877, 152998498
	.word 852999830, 831934985, -512422375, 999999999, 605314838, -25059609, 710968906, 750578439, -245952149, -88581922, -99791731, 223052185, -210588270, 694309361, 859185223
	.word -20324338, 679971985, 723132530, -751521772, 351588347, -78778766, 117111402, 796637794, -473981093, 861388238, -272088538, 104079043, 570862829, 45444038, 8952694
	.word 580115584, -196791902, 760503017, 89405414, 171823904, -523887078, 576974326, -728332173, 932132006, -23279157, 675270476, -542217613, -112343626, -635852521, 533924368
	.word -407131720, 999594249, -344185032, -966650962, -178606055, -123593536, 944084893, -445030307, 674428337, 723628056, -679440688, -646113563, -756770404, 666505955, -372499438
	.word 682084471, 854163015, -797120983, -398697892, 564217619, 201487900, 509813174, -558185370, 548211586, 297700479, 126078158, 380813670, -898785450, 224752417, -617056330
	.word 198282155,-258436524, 586726729, 614752761, 612820403, -907712492, -496794136, 209980176, -64898254, -866162681, 586683750, -307118698, -593835994, 512468273, -268704588 
	.word 662686714, -315337305,419986730, 680452326, -727698001, 823010317, -352349072, 725718863, -656741488, 895593376, 237491569, -141132330, -960915762, 101684350, -986908261 
	.word 904825840, 734248400, -910024129,-752960287, -23558195, 668708815, -381522596, 543015007, 914560128, 322983294, -309597047, -231759977, -198671611, -557791807, -428114185
	.word 174459432, -436126998, -570842328, 683898638,-920723820, -595303568, 30355275, 370470344, -605447362, 311618895, -646817183, -410634022, 740398824, -223314791, 30931281
	.word 480072273, 717035976, 117273988, -444994575, 766940412,683079892,875526994, 865809640, -99811622, -766527143, -498886974, -87285826, -586500241, 712160992, 69179802
	.word 218782482, 276320401, 866996301, -58975302, -943078484, -230638903, 886029849, -555526419,-268339370, -858965341, -25557017, 397183835, 175369280, 149433346, 757598786
	.word -410006476, -793481112, 455343909, -328997481, -119418786, -776036426, -307814523, 644763092, 153815614, 634293127,-627842130, -176290663, 192982092, -622805952, 19885037
	.word 541865802, -697217137, -975529419, 46128289, -304906794, 963345683, -338858683, 827988217, 179757062, -291395153,521034812, -927899638, 390957052, -596075196, 482487648
	.word -669310056, -341696206, -861356504, 385529709, -449313259, 730728706, 462120849, -736099436, -749005313, -65360793, 678888770, 345348261, -847359180, 277856248, 708830633
	.word 773771361, 928653895, -292567864, -121450920, -350351802, -615818269, 368612693, -112422886, 685016900, -730873247, -515861656, 655340105, -796977934, 580049022, 293267154
	.word 942485515, -640573460, 528369584, 740690122, -909173869, -89383593, -247592205, -47470242, -771345385, 201276599, 583408044, -926541725, 681620909, 187284713, 408648752
	.word -788410258, 270749190, -89422480, -735050587, 275238969, -642872307, 788029302, 785181791, 278462279, 582956388, -395066018, -762498688, -429552376, 709172336, -162272367
	.word 631384424, 468691418, 348277768, 834930417, 444032795, 1245375, 189639908, 816035114, 311206212, -74576150, -425521431, 41363317, -809057445, 415608374, 240403809
	.word 799936826, 959377245, 776424338, -490435505, -422930054, 993216189, -223689183, 701771396, 631898410, 993731052, -264746536, 371313979, 104228436, 7525393, 24014274
	.word -428100707, -975752569, 379387206, 587470623, 570380780, -324796442, 767152039, 823231859, 470930636, -169773784, -251211022, 124007294, -961949282, 462638596, 780860993
	.word -186371424, 491683661, -160229371, -154221708, 536571783, 490237852, -732216785, 456370963, 246866362, 740173504, 388116548, 796722267, 715438674, -197649142, -997321511
	.word 177720672, -502702479, 171575506, 211649077, 871855803, -748478664, -435968657, -320087527, 254363723, 18086646, -501611161, -232295134, 562601816, 991710855, 454139631
	.word 450032720, -706105302, -452821529, -279222325, 257777030, -23590040, 263467546, -998726157, 392812938, -118479501, -766290769, -667948186, -239542140, 636135135, 83552786
	.word -79895349, -771714013, -453338133, 881199843, 514925710, -565935519, 163583276, -609700217, 542306425, -620091844, -311562721, 504126610, 315587073, 734720222, -669468654
	.word 426721372, 769539486, -218463289, -806178914, 16246428, -538481326, 394810985, 907936537, -404207624, -87212169

;array:	.word 0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0
;	.word 0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0
;	.word 0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0
;	.word 0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0
;	.word 0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0
;	.word 0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0
;	.word 0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0
;	.word 0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0
;	.word 0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0
;	.word 0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0


len:  .word 400

endl:	.asciiz	"\n"
max:	.word	0
X:	.word	0
Z:	.word	0
B:	.word	0
C:	.word	0
P:	.word	0		;max's position

PrintX:	.asciiz	"X="
PrintZ:	.asciiz	"Z="
PrintB:	.asciiz	"B="
PrintC:	.asciiz	"C="
PrintP:	.asciiz	"P="

CONTROL: .word32 0x10000
DATA:    .word32 0x10008

	.text
start:	lwu r9,CONTROL(r0)	; get control registers
	ld r20,X(r0)		;load all data to regs
	ld r21,Z(r0)
	ld r22,B(r0)
	ld r23,C(r0)
	ld r24,P(r0)
	ld r25,max(r0)

	ld r17,len(r0)  	;r17 = len
	daddi r19,r0,1000	;r19=1000 (check for B)
	dsll r17,r17,3     	;r17 = len*8--avoid stall
	dadd r16,r0,r0		;index=r16=0
for:	slt r10,r16,r17    	;i < len?
	ld r18,array(r16)  	;r18=A[i]
	beqz r10,out		;exit from for
	

questionXZC: dadd r11,r0,r0	;counter1,then c0=64-c1
	dadd r10,r18,r0		;r10=temp of r18(avoid stall)
	dadd r14,r18,r0		;r14=r18(will be the reversed var for C)---C
	daddi r15,r0,64		;all bits of num/r18---C

Loop:	beqz r10,stop
	andi r13,r10,1		;r13=1->odd else even
	daddi r15,r15,-1	;s--/---C
	dadd r11,r11,r13	;if r13=1 counter++ else stays same	

	dsll r14,r14,1		;r10 <<= 1(here only for ds)---C
	andi r8,r10,1		;r24 = r10 & 1---C

	dsrl r10,r10,1		;for next bit
	or r14,r14,r8		;r14 |= r24---C

;----------------------------------------------------------------------------
	andi r13,r10,1		;r13=1->odd else even
	daddi r15,r15,-1	;s--/---C
	dadd r11,r11,r13	;if r13=1 counter++ else stays same	

	dsll r14,r14,1		;r10 <<= 1(here only for ds)---C
	andi r8,r10,1		;r24 = r10 & 1---C

	dsrl r10,r10,1		;for next bit
	or r14,r14,r8		;r14 |= r24---C
;----------------------------------------------------------------------------
	andi r13,r10,1		;r13=1->odd else even
	daddi r15,r15,-1	;s--/---C
	dadd r11,r11,r13	;if r13=1 counter++ else stays same	

	dsll r14,r14,1		;r10 <<= 1(here only for ds)---C
	andi r8,r10,1		;r24 = r10 & 1---C

	dsrl r10,r10,1		;for next bit
	or r14,r14,r8		;r14 |= r24---C
;----------------------------------------------------------------------------
	andi r13,r10,1		;r13=1->odd else even
	daddi r15,r15,-1	;s--/---C
	dadd r11,r11,r13	;if r13=1 counter++ else stays same	

	dsll r14,r14,1		;r10 <<= 1(here only for ds)---C
	andi r8,r10,1		;r24 = r10 & 1---C

	dsrl r10,r10,1		;for next bit
	or r14,r14,r8		;r14 |= r24---C
;----------------------------------------------------------------------------
	andi r13,r10,1		;r13=1->odd else even
	daddi r15,r15,-1	;s--/---C
	dadd r11,r11,r13	;if r13=1 counter++ else stays same	

	dsll r14,r14,1		;r10 <<= 1(here only for ds)---C
	andi r8,r10,1		;r24 = r10 & 1---C

	dsrl r10,r10,1		;for next bit
	or r14,r14,r8		;r14 |= r24---C
;----------------------------------------------------------------------------
	andi r13,r10,1		;r13=1->odd else even
	daddi r15,r15,-1	;s--/---C
	dadd r11,r11,r13	;if r13=1 counter++ else stays same	

	dsll r14,r14,1		;r10 <<= 1(here only for ds)---C
	andi r8,r10,1		;r24 = r10 & 1---C

	dsrl r10,r10,1		;for next bit
	or r14,r14,r8		;r14 |= r24---C
;----------------------------------------------------------------------------
	andi r13,r10,1		;r13=1->odd else even
	daddi r15,r15,-1	;s--/---C
	dadd r11,r11,r13	;if r13=1 counter++ else stays same	

	dsll r14,r14,1		;r10 <<= 1(here only for ds)---C
	andi r8,r10,1		;r24 = r10 & 1---C

	dsrl r10,r10,1		;for next bit
	or r14,r14,r8		;r14 |= r24---C
;----------------------------------------------------------------------------
	andi r13,r10,1		;r13=1->odd else even
	daddi r15,r15,-1	;s--/---C
	dadd r11,r11,r13	;if r13=1 counter++ else stays same	

checkC:	dsll r14,r14,1		;r10 <<= 1(here only for ds)---C
	andi r8,r10,1		;r24 = r10 & 1---C

again:	dsrl r10,r10,1		;for next bit
	j Loop
	or r14,r14,r8		;r14 |= r24---C
;----------------------------------------------------------------------------
stop:	dsllv r14,r14,r15	;r14 <<= r15---C
	slti r13,r11,54		;c1 < 54 -> c0 > 10
	bne r14,r18,after	;---
	dadd r21,r21,r13	;Z++ maybe
	daddi r23,r23,1		;C++/---C

after:	daddi r10,r0,-1		;r10=-1-->xori doesn't work
	xor r10,r18,r10		;r10=opposite of r18 - 1
	daddi r10,r10,1		;r10=-r18 now
	dadd r15,r10,r0		;r15=r10

Loop2:	beqz r10,stop2		;same loop for -r18
	andi r13,r10,1		;r13=1->odd else even
	dsrl r10,r10,1		;for next bit

	dsub r11,r11,r13	;if r13=0 counter-- so if in the end is equal to 0 then X++
;-----------------------------1st L_U----------------------------------------
	andi r13,r10,1		;r13=1->odd else even
	dsrl r10,r10,1		;for next bit

	dsub r11,r11,r13	;counter--
;-----------------------------2nd L_U----------------------------------------
	andi r13,r10,1		;r13=1->odd else even
	dsrl r10,r10,1		;for next bit

	dsub r11,r11,r13	;counter--
;-----------------------------3rd L_U----------------------------------------
	andi r13,r10,1		;r13=1->odd else even
	dsrl r10,r10,1		;for next bit

	dsub r11,r11,r13	;counter--
;-----------------------------4th L_U(end)-----------------------------------
	andi r13,r10,1		;r13=1->odd else even
	dsrl r10,r10,1		;for next bit

	dsub r11,r11,r13	;counter--
;-----------------------------5th L_U----------------------------------------
	andi r13,r10,1		;r13=1->odd else even
	dsrl r10,r10,1		;for next bit

	dsub r11,r11,r13	;counter--
;-----------------------------6th L_U----------------------------------------
	andi r13,r10,1		;r13=1->odd else even
	dsrl r10,r10,1		;for next bit

	dsub r11,r11,r13	;counter--
;-----------------------------7th L_U----------------------------------------
	andi r13,r10,1		;r13=1->odd else even
	dsrl r10,r10,1		;for next bit

again2:	j Loop2
	dsub r11,r11,r13	;counter--
;-----------------------------8th L_U(end)-----------------------------------

stop2:	bnez r11,questionB	;here checks if counter=0
	slt r13,r19,r18		;r18 > 1000 ?--qB
	daddi r20,r20,1		;X++

questionB: slt r12,r19,r15	;-r18 > 1000 ?--qB
	or r12,r12,r13
	slt r11,r18,r25		;r11=0 if r18>=max--qP
	dadd r22,r22,r12	;B++ if needed



questionP: bnez r11,next	;if r11=1 goto next
	dsrl r10,r16,3		;r10 div 8 to get index
	dadd r25,r18,r0		;store current num in max
	dadd r24,r10,r0		;store current index in P
	
next:	j for
	daddi r16,r16,8		;i++

;<----------------------------------------------------------------------------->


out:	lwu r8,DATA(r0)		; get data
	sd r20,X(r0)		; and store results
	sd r21,Z(r0)
	sd r22,B(r0)
	sd r23,C(r0)
	sd r24,P(r0)

pr_X:	ld r2,X(r0)
	daddi r1,r0,PrintX
	sd r1,(r8)		;put str in DATA
	daddi r10,r0,4     	;set for string output
	sd r10,(r9)		;display "X="
        daddi r10,r0,1   	;set for integer output
	sd r2,(r8)		;put B in DATA
	sd r10,(r9)		;display X

pr_Z:	ld r2,Z(r0)
	daddi r1,r0,PrintZ
	sd r1,(r8)		;put str in DATA
	daddi r10,r0,4     	;set for string output
	sd r10,(r9)		;display "Z="
        daddi r10,r0,1   	;set for integer output
	sd r2,(r8)		;put B in DATA
	sd r10,(r9)		;display Z

pr_B:	ld r2,B(r0)
	daddi r1,r0,PrintB
	sd r1,(r8)		;put str in DATA
	daddi r10,r0,4     	;set for string output
	sd r10,(r9)		;display "B="
        daddi r10,r0,1   	;set for integer output
	sd r2,(r8)		;put B in DATA
	sd r10,(r9)		;display B

pr_C:	ld r2,C(r0)
	daddi r1,r0,PrintC
	sd r1,(r8)		;put str in DATA
	daddi r10,r0,4     	;set for string output
	sd r10,(r9)		;display "C="
        daddi r10,r0,1   	;set for integer output
	sd r2,(r8)		;put B in DATA
	sd r10,(r9)		;display C

pr_P:	ld r2,P(r0)
	daddi r1,r0,PrintP
	sd r1,(r8)		;put str in DATA
	daddi r10,r0,4     	;set for string output
	sd r10,(r9)		;display "P="
        daddi r10,r0,1   	;set for integer output
	sd r2,(r8)		;put B in DATA
	sd r10,(r9)		;display P

Exit:	halt
